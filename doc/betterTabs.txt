*betterTabs.txt* Easily work on different projects is the same Vim instance

         ____       _   _           _____     _         ~
        | __ )  ___| |_| |_ ___ _ _|_   _|_ _| |__  ___ ~
        |  _ \ / _ \ __| __/ _ \ '__|| |/ _` | '_ \/ __|~
        | |_) |  __/ |_| ||  __/ |   | | (_| | |_) \__ \~
        |____/ \___|\__|\__\___|_|   |_|\__,_|_.__/|___/~
  
A buffer manager allowing to create a real separation between your tabs!

(This help file is a work in progress it might need some improvements and
contain some unwanted typos/grammar mistakes/satan invocations)
===============================================================================
CONTENTS                                                     *BetterTabsContents*

    1. Usage ................ |BetterTabsUsage|
    2. Commands ............. |BetterTabsCommands|
    3. Mappings ............. |BetterTabsMappings|
    4. License .............. |BetterTabsLicense|
    5. Bugs ................. |BetterTabsBugs|
    6. Contributing ......... |BetterTabsContributing|
    7. Changelog ............ |BetterTabsChangelog|

===============================================================================
1. Usage                                                        *BetterTabsUsage*

BetterTabs allow you to separate your buffers into different tabs.

It was created to let the user work on different projects -each project in a
tab- without having a buffer passing from a tab to another by mistake.

This plugin uses autocommands when a new buffer is created so the user doesn't
have to worry about how they're handled. Simply open tabs as you usually do and
use your prefered way to open a buffer.

Once a buffer is open in a tab it can't be accessed from another tab. To
switch between tabs the user can use `tabnext` and `tabprevious` as usual.

===============================================================================
2. Commands                                                  *BetterTabsCommands*

:NextBuf                                                               *:NextBuf*
    Change to the next buffer in the tab. If the buffer is the last of the tab
    this command cycle to the first one in the tab.
    
    The user shouldn't use |bnext| which would create an inconsistent state in 
    the buffer manager.

:PrevBuf                                                               *:PrevBuf*
    Change to the previous buffer in the tab. If the buffer is the first of the
    tab this command cycle to the last one in the tab

    The user shouldn't use |bNext| or |bprevious| which would create an 
    inconsistent state in the buffer manager.

:ChangeBuf                                                           *:ChangeBuf*
    Outputs the current buffers organisation and wait for the user to select
    the buffer he want to access. This function ensure a consistent behavior
    thus the user shouldn't use |buffer| to change of buffer

    The output of the command is like the folowing:

        > Tab 1                 ~
          1 #    "/test/text"   ~
          2 %    "asdf"         ~
                                ~
          Tab 2                 ~
          3      "version.c"    ~

        Buffer:              ~

    The user can input a buffer numer or a buffer name, the completion is set
    to the buffer names. Once the buffer is selected, betterTabs.vim changes 
    the tab and the current.

:CloseBuf                                                             *:CloseBuf*
    Close a buffer.
    
    To keep the behavior of this plugin consistent, users shouldn't use
    |bdelete|.

:CloseTab                                                             *:CloseTab*
    Close a tab.

    To keep the behavior of this plugin consistent, users shouldn't use
    the built-in command |tabclose|.

:ListBuf                                                               *:ListBuf*

    Allows you to see the different tabs open and the buffers contained
    in the tabs.

    The output of the function is like the following:

        > Tab 1                 ~
          1 #    "/test/text"   ~
          2 %    "asdf"         ~
                                ~
          Tab 2                 ~
          3      "version.c"    ~

    The `>` character in front of the tab name shows the current opened tab.

    The description of the buffers is the same as the one made by the 
    built-in command |ls|


===============================================================================
3. Mappings                                                  *BetterTabsMappings*

BetterTabs.vim provides different mappings to call more easily commands
defined in |BetterTabsCommands|.

It is possible to disable these mapping by simply adding the following line to
your |.vimrc|:

    " Disable BetterTabs.vim mappings ~
    let g:betterTabsVim_map_keys = 0  ~

Provided mappings are the following:

Changing of buffer: ~
    <Leader-h>
    Change to next buffer in tab (see: |:NextBuf|)

    <Leader-j>
    Change to previous buffer in tab (see: |:PrevBuf|)

    <Leader-bb>
    Change of buffer in any tab (see: |:ChangeBuf|)

Closing buffers: ~
    <Leader-bc>
    Delete a buffer (see: |:CloseBuf|)

    <Leader-tc>
    Close a tab and the buffers it contains (see: |:CloseTab|)

Others: ~
    <F2>
    List the current organisation of the tabs (see: |:ListBuf|)

===============================================================================
4. License                                                    *BetterTabsLicense*

BetterTabs.vim is distributed with the following license:

The MIT License (MIT)

Copyright (c) 2015 Adrien Fabre

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


===============================================================================
5. Bugs                                                          *BetterTabsBugs*

To report a bug please feel free to leave an issue on:

https://github.com/statox/betterTabs.vim/issues

===============================================================================
6. Contributing                                          *BetterTabsContributing*

If you want to help contributing to this plugin feel free to fork the github
repo https://github.com/statox/betterTabs.vim and to send pull request the
author will gladly look at them and merge them in the project.

Also if you don't feel like forking and coding you can sacrifice an Oreo to
our Lord and Savior Santan in the name of the author that also be really
appreciated.

===============================================================================
7. Changelog                                                *BetterTabsChangelog*

BetterTabs.vim isn't yet in a stable version. When I'll have finished the
development you'll hopefully find here the changelog of the different stable
version and maybe some prevision for future features. Well... Maybe.
